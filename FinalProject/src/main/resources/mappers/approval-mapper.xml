<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approvalMapper">
	<resultMap id="approvalMap" type="Approval">
		<id property="appNo" column="APP_NO"/>
		<result property="appWriterNo" column="APP_WRITER_NO"/>
		<result property="appTitle" column="APP_TITLE"/>
		<result property="appCreateDate" column="APP_CREATE_DATE"/>
		<result property="rejecter" column="REJECTER"/>
		<result property="rejectReason" column="REJECT_REASON"/>
		<result property="firstApprover" column="FIRST_APPROVER"/>
		<result property="lastApprover" column="LAST_APPROVER"/>
		<result property="firstApprovalDate" column="FIRST_APPROVAL_DATE"/>
		<result property="lastApprovalDate" column="LAST_APPROVAL_DATE"/>
		<result property="appKinds" column="APP_KINDS"/>
		<result property="appStatus" column="APP_STATUS"/>
		<result property="status" column="STATUS"/>
		<result property="firstAppNo" column="FIRST_APP_NO"/>
		<result property="lastAppNo" column="LAST_APP_NO"/>
	</resultMap>
	<resultMap type="com.uni.spring.approval.model.dto.ApperAccount" id="apperAccountMap">
		<id property="appNo" column="APP_NO"/>
		<result property="erAccountHolder" column="ER_ACCOUNT_HOLDER"/>
		<result property="bankName" column="BANK_NAME"/>
		<result property="accountNumber" column="ACCOUNT_NUMBER"/>
		<result property="erAmount" column="ER_AMOUNT"/>
	</resultMap>
	<resultMap id="approvalLvMap" type="com.uni.spring.approval.model.dto.ApprovalLeave">
		<id property="appNo" column="APP_NO"/>
		<result property="leaveStart" column="LEAVE_START"/>
		<result property="leaveFinish" column="LEAVE_FINISH"/>
		<result property="leaveReason" column="LEAVE_REASON"/>
		<result property="leaveTotalDate" column="LEAVE_TOTALDATE"/>
		<result property="leaveCategory" column="LEAVE_CATEGORY"/>
		<result property="category" column="CATEGORY"/>
	</resultMap>
	<resultMap id="approvalRpMap" type="com.uni.spring.approval.model.dto.ApprovalReport">
		<id property="appNo" column="APP_NO"/>
		<result property="reportContent" column="REPORT_CONTENT"/>
		<result property="reportIssue" column="REPORT_ISSUE"/>
	</resultMap>
	<resultMap id="employeeMap" type="Employee">
		<id property="empNo" column="EMP_NO"/>
		<result property="empName" column="EMP_NAME" />
		<result property="depName" column="DEP_NAME" />
		<result property="posName" column="POS_NAME" />
	</resultMap>
	<resultMap id="attachmentMap" type="com.uni.spring.common.dto.Attachment">
		<id property="fileNo" column="FILE_NO"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
	</resultMap>
	<resultMap type="com.uni.spring.approval.model.dto.mapDto.ApprovalMap" id="approvalResultMap">
		<collection property="approval" resultMap="approvalMap" />
		<collection property="apperAccount" resultMap="apperAccountMap" />
		<collection property="approvalLeave" resultMap="approvalLvMap" />
		<collection property="approvalReport" resultMap="approvalRpMap" />
		<collection property="employee" resultMap="employeeMap" />
		<collection property="attachment" resultMap="attachmentMap" />
	</resultMap>
	
	<insert id="insertApproval" parameterType="Approval">
		INSERT INTO APPROVAL
		(APP_NO, APP_WRITER_NO, APP_TITLE, APP_CREATE_DATE, FIRST_APPROVER, LAST_APPROVER, APP_KINDS, APP_STATUS, STATUS)
		VALUES(SEQ_APP.NEXTVAL, #{appWriterNo}, #{appTitle}, #{appCreateDate}, #{firstApprover}, #{lastApprover}, #{appKinds}, DEFAULT, DEFAULT)
	</insert>
	<insert id="insertApperAccount" parameterType="com.uni.spring.approval.model.dto.ApperAccount">
		INSERT INTO APPER_ACCOUNT
		VALUES(SEQ_APP.CURRVAL, #{erAccountHolder}, #{bankName}, #{accountNumber}, #{erAmount})
	</insert>
	<insert id="insertApprovalErs" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="INSERT ALL" close="SELECT * FROM DUAL" separator=" ">
			INTO APP_ER(APP_NO, ER_CLASS, ER_DATE, ER_DETAIL, ER_USE, ER_PAYMENT, CATEGORY)
			VALUES
			<if test="item.erAppNo == 0">
				(SEQ_APP.CURRVAL, #{item.erClass}, #{item.erDate}, #{item.erDetail}, #{item.erUse}, #{item.erPayment}, DEFAULT)
			</if>
			<if test="item.erAppNo != 0">
				(#{item.erAppNo}, #{item.erClass}, #{item.erDate}, #{item.erDetail}, #{item.erUse}, #{item.erPayment}, DEFAULT)
			</if>
		</foreach>
	</insert>
	<insert id="insertAttachment" parameterType="Attachment">
		INSERT INTO ATTACHMENT
		VALUES(SEQ_ANO.NEXTVAL, #{empNo}, SEQ_APP.CURRVAL, 2, #{originName}, #{changeName}, #{filePath}, DEFAULT, DEFAULT)
	</insert>
	<insert id="insertLeaveApproval" parameterType="com.uni.spring.approval.model.dto.ApprovalLeave">
	INSERT INTO APP_LEAVE
	VALUES(SEQ_APP.CURRVAL, #{leaveStart}, #{leaveFinish}, #{leaveReason}, #{leaveTotalDate}, #{leaveCategory}, DEFAULT)
	</insert>
	<insert id="insertReportApproval" parameterType="com.uni.spring.approval.model.dto.ApprovalReport">
	INSERT INTO APP_REPORT
	VALUES(SEQ_APP.CURRVAL, #{reportContent}, #{reportIssue}, DEFAULT)
	</insert>
	<select id="selectDeptList" resultType="Department">
		SELECT *
		FROM DEPARTMENT
	</select>
	<select id="selectApproverList" parameterType="Employee" resultType="Employee">
		SELECT A.EMP_NO, A.EMP_NAME, A.POS_NO, B.POS_NAME, C.DEP_NAME
		FROM EMPLOYEE A
		LEFT JOIN JOB_POSITION B ON A.POS_NO = B.POS_NO
		LEFT JOIN DEPARTMENT C ON A.DEP_NO = C.DEP_NO
		<![CDATA[WHERE A.EMP_NO <> #{empNo}]]>
		<if test="depNo != 0">
		AND A.DEP_NO = #{depNo}
		</if>
		<if test="empName != null">
		AND A.EMP_NAME LIKE '%'||#{empName}||'%'
		</if>
		AND A.STATUS = 'Y'
		ORDER BY A.POS_NO
	</select>
	<select id="selectMyApprovalListCnt" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL
		WHERE STATUS = 'Y'
	<![CDATA[AND APP_STATUS <> 'R']]>
		AND APP_WRITER_NO = #{userNo}
	</select>
	<select id="selectMyApprovalList" parameterType="_int" resultType="Approval">
	SELECT ROWNUM, A.APP_NO, B.EMP_NAME APP_WRITER_NO, A.APP_TITLE,
        A.APP_CREATE_DATE, A.REJECTER, A.REJECT_REASON,
        A.FIRST_APPROVER, A.LAST_APPROVER,
        SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE,
        A.APP_KINDS, A.APP_STATUS
	FROM APPROVAL A
	     JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
	WHERE A.STATUS = 'Y'
	AND A.APP_WRITER_NO = #{userNo}
	<![CDATA[AND A.APP_STATUS <> 'R']]>
	ORDER BY APP_NO DESC
	</select>
	<select id="selectBoxListCnt" parameterType="Approval" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL
		WHERE STATUS = 'Y'
		AND APP_WRITER_NO = #{appWriterNo}
	<if test='appStatus.equals("I") or appStatus.equals("W") or appStatus.equals("C")'>
		AND	APP_STATUS = #{appStatus}
	</if>
	</select>
	<select id="selectBoxList" parameterType="Approval" resultType="Approval">
		SELECT ROWNUM, A.APP_NO, B.EMP_NAME APP_WRITER_NO, A.APP_TITLE,
		    A.APP_CREATE_DATE, A.REJECTER, A.REJECT_REASON,
		    A.FIRST_APPROVER, A.LAST_APPROVER,
		    SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE,
		    A.APP_KINDS, A.APP_STATUS
		FROM APPROVAL A
	    	JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
		WHERE A.STATUS = 'Y'
			AND A.APP_WRITER_NO = #{appWriterNo}
		<if test='appStatus.equals("I") or appStatus.equals("W") or appStatus.equals("C")'>
			AND	A.APP_STATUS = #{appStatus}
		</if>
	ORDER BY APP_NO DESC
	</select>
	
	<select id="selectApprovalInboxListCnt" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL A
		     JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
		WHERE A.STATUS = 'Y'
		AND (A.FIRST_APPROVER = #{userNo} OR A.LAST_APPROVER = #{userNo})
		<![CDATA[AND A.APP_STATUS <> 'R']]>
	</select>
	<select id="selectApprovalInboxList" parameterType="_int" resultType="Approval">
		SELECT ROWNUM, A.APP_NO, B.EMP_NAME APP_WRITER_NO, A.APP_TITLE,
		    A.APP_CREATE_DATE, A.REJECTER, A.REJECT_REASON,
		    A.FIRST_APPROVER, A.LAST_APPROVER,
		    SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE,
		    A.APP_KINDS, A.APP_STATUS
		FROM APPROVAL A
		     JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
		WHERE A.STATUS = 'Y'
			AND (A.FIRST_APPROVER = #{userNo} OR A.LAST_APPROVER = #{userNo})
		<![CDATA[AND A.APP_STATUS <> 'R']]>
			ORDER BY APP_NO DESC
	</select>
	<select id="selectApprovalReturnListCnt" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM APPROVAL
		WHERE STATUS = 'Y'
        AND APP_STATUS = 'R'
		AND APP_WRITER_NO = #{userNo}
	</select>
	<select id="selectApprovalReturnList" parameterType="_int" resultType="Approval">
		SELECT ROWNUM, A.APP_NO, B.EMP_NAME APP_WRITER_NO, A.APP_TITLE,
		    A.APP_CREATE_DATE, A.REJECTER, A.REJECT_REASON,
		    A.FIRST_APPROVER, A.LAST_APPROVER,
		    SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE,
		    A.APP_KINDS, A.APP_STATUS
		FROM APPROVAL A
		     JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
		WHERE A.STATUS = 'Y'
            AND A.APP_WRITER_NO = #{userNo}
            AND A.APP_STATUS = 'R'
			ORDER BY APP_NO DESC
	</select>

	<select id="selectApprovalEr" parameterType="_int" resultMap="approvalResultMap">
       SELECT DISTINCT B.EMP_NO, A.APP_NO, B.EMP_NAME APP_WRITER_NO, D.DEP_NAME, E.POS_NAME,
	        A.APP_CREATE_DATE, F.EMP_NAME FIRST_APPROVER, G.EMP_NAME LAST_APPROVER, A.APP_STATUS,
	        SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE, A.APP_KINDS,
	        A.REJECTER, A.REJECT_REASON, C.ER_ACCOUNT_HOLDER, C.BANK_NAME,
            C.ACCOUNT_NUMBER, C.ER_AMOUNT, A.APP_TITLE, A.FIRST_APPROVER FIRST_APP_NO, A.LAST_APPROVER LAST_APP_NO
	   FROM APPROVAL A
	        JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
	        JOIN APPER_ACCOUNT C ON (A.APP_NO = C.APP_NO)
	        JOIN DEPARTMENT D ON (B.DEP_NO = D.DEP_NO)
	        JOIN JOB_POSITION E ON (B.POS_NO = E.POS_NO),
	        (SELECT A.EMP_NAME, B.FIRST_APPROVER FROM EMPLOYEE A JOIN APPROVAL B ON A.EMP_NO = B.FIRST_APPROVER) F,
	        (SELECT A.EMP_NAME, B.LAST_APPROVER FROM EMPLOYEE A JOIN APPROVAL B ON A.EMP_NO = B.LAST_APPROVER) G
	   WHERE A.STATUS = 'Y'
		   AND A.APP_NO = #{appNo}
		   AND A.FIRST_APPROVER = F.FIRST_APPROVER
		   AND A.LAST_APPROVER = G.LAST_APPROVER
	</select>
	<select id="selectAppErs" parameterType="_int" resultType="com.uni.spring.approval.model.dto.ApprovalErs">
		SELECT *
		FROM APP_ER
		WHERE APP_NO = #{appNo}
	</select>
	<select id="selectApprovalLv" parameterType="_int" resultMap="approvalResultMap">
	   SELECT DISTINCT B.EMP_NO, A.APP_NO, B.EMP_NAME APP_WRITER_NO, D.DEP_NAME, E.POS_NAME,
	        A.APP_CREATE_DATE, F.EMP_NAME FIRST_APPROVER, G.EMP_NAME LAST_APPROVER, A.APP_STATUS,
	        SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE, A.APP_KINDS,
	        A.REJECTER, A.REJECT_REASON, C.LEAVE_START, C.LEAVE_FINISH, 
	        A.APP_TITLE, C.LEAVE_CATEGORY, C.LEAVE_TOTALDATE, C.LEAVE_REASON, A.FIRST_APPROVER FIRST_APP_NO, A.LAST_APPROVER LAST_APP_NO
	   FROM APPROVAL A
	        JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
	        JOIN APP_LEAVE C ON (A.APP_NO = C.APP_NO)
	        JOIN DEPARTMENT D ON (B.DEP_NO = D.DEP_NO)
	        JOIN JOB_POSITION E ON (B.POS_NO = E.POS_NO),
	        (SELECT A.EMP_NAME, B.FIRST_APPROVER FROM EMPLOYEE A JOIN APPROVAL B ON A.EMP_NO = B.FIRST_APPROVER) F,
	        (SELECT A.EMP_NAME, B.LAST_APPROVER FROM EMPLOYEE A JOIN APPROVAL B ON A.EMP_NO = B.LAST_APPROVER) G
	   WHERE A.STATUS = 'Y'
		   AND A.APP_NO = #{appNo}
		   AND A.FIRST_APPROVER = F.FIRST_APPROVER
		   AND A.LAST_APPROVER = G.LAST_APPROVER
	</select>
	<select id="selectApprovalRp" parameterType="_int" resultMap="approvalResultMap">
       SELECT DISTINCT B.EMP_NO, A.APP_NO, B.EMP_NAME APP_WRITER_NO, D.DEP_NAME, E.POS_NAME,
	        A.APP_CREATE_DATE, F.EMP_NAME FIRST_APPROVER, G.EMP_NAME LAST_APPROVER, A.APP_STATUS,
	        SUBSTR(A.FIRST_APPROVAL_DATE, 1,8) FIRST_APPROVAL_DATE, SUBSTR(A.LAST_APPROVAL_DATE, 1,8) LAST_APPROVAL_DATE, A.APP_KINDS,
	        A.REJECTER, A.REJECT_REASON, C.REPORT_CONTENT, C.REPORT_ISSUE, A.APP_TITLE, A.FIRST_APPROVER FIRST_APP_NO, A.LAST_APPROVER LAST_APP_NO
	   FROM APPROVAL A
	        JOIN EMPLOYEE B ON (A.APP_WRITER_NO = B.EMP_NO)
	        JOIN APP_REPORT C ON (A.APP_NO = C.APP_NO)
	        JOIN DEPARTMENT D ON (B.DEP_NO = D.DEP_NO)
	        JOIN JOB_POSITION E ON (B.POS_NO = E.POS_NO),
	        (SELECT A.EMP_NAME, B.FIRST_APPROVER FROM EMPLOYEE A JOIN APPROVAL B ON A.EMP_NO = B.FIRST_APPROVER) F,
	        (SELECT A.EMP_NAME, B.LAST_APPROVER FROM EMPLOYEE A JOIN APPROVAL B ON A.EMP_NO = B.LAST_APPROVER) G
	   WHERE A.STATUS = 'Y'
		   AND A.APP_NO = #{appNo}
		   AND A.FIRST_APPROVER = F.FIRST_APPROVER
		   AND A.LAST_APPROVER = G.LAST_APPROVER
	</select>
	<select id="selectAppAttachment" parameterType="_int" resultType="com.uni.spring.common.dto.Attachment">
		SELECT A.ORIGIN_NAME, A.CHANGE_NAME
		FROM ATTACHMENT A
		WHERE A.REF_NO = #{appNo}
		AND A.CATEGORY = 2
	</select>
	<update id="updateFirstApprove" parameterType="_int">
		UPDATE APPROVAL
		SET FIRST_APPROVAL_DATE = SYSDATE,
			APP_STATUS = 'I'
		WHERE APP_NO = #{appNo}
	</update>
	<update id="updateLastApprove" parameterType="_int">
		UPDATE APPROVAL
		SET LAST_APPROVAL_DATE = SYSDATE,
			APP_STATUS = 'C'
		WHERE APP_NO = #{appNo}
	</update>
	<update id="insertRejecter" parameterType="Approval">
		UPDATE APPROVAL
		SET REJECTER = #{rejecter},
			REJECT_REASON = #{rejectReason},
		<choose>
			<when test="firstApprovalDate == ''">
				FIRST_APPROVAL_DATE = SYSDATE,
			</when>
			<when test="firstApprovalDate != ''">
				LAST_APPROVAL_DATE = SYSDATE,
			</when>
		</choose>
			APP_STATUS = 'R'
		WHERE APP_NO = #{appNo}
	</update>
	<update id="updateApproval" parameterType="Approval">
		UPDATE APPROVAL
		 	SET
				APP_TITLE = #{appTitle},
				FIRST_APPROVER = #{firstApprover},
				LAST_APPROVER = #{lastApprover},
				APP_KINDS = #{appKinds}
			WHERE APP_NO = #{appNo}
			AND STATUS = 'Y'
	</update>
	<update id="updateApprovalRp" parameterType="com.uni.spring.approval.model.dto.ApprovalReport">
		UPDATE APP_REPORT
			SET
				REPORT_CONTENT = #{reportContent},
				REPORT_ISSUE = #{reportIssue}
			WHERE APP_NO = #{appNo}
	</update>
	<update id="updateApprovalLv" parameterType="com.uni.spring.approval.model.dto.ApprovalLeave">
		UPDATE APP_LEAVE
			SET
				LEAVE_START = #{leaveStart},
				LEAVE_FINISH = #{leaveFinish},
				LEAVE_REASON = #{leaveReason},
				LEAVE_TOTALDATE = #{leaveTotalDate},
				LEAVE_CATEGORY = #{leaveCategory}
			WHERE APP_NO = #{appNo}
	</update>
	<update id="updateApperAcc" parameterType="com.uni.spring.approval.model.dto.ApperAccount">
		UPDATE APPER_ACCOUNT
			SET
				ER_ACCOUNT_HOLDER = #{erAccountHolder},
				BANK_NAME = #{bankName},
				ACCOUNT_NUMBER = #{accountNumber},
				ER_AMOUNT = #{erAmount}
			WHERE APP_NO = #{appNo}
	</update>
	<delete id="deleteApprovalErs" parameterType="_int">
		DELETE FROM APP_ER
		WHERE APP_NO = #{appNo}
	</delete>
	<update id="updateAttachment" parameterType="com.uni.spring.common.dto.Attachment">
		MERGE INTO
			ATTACHMENT A
		USING DUAL
		ON (A.REF_NO = #{refNo} AND A.EMP_NO = #{empNo} AND A.CATEGORY = 2)
		WHEN MATCHED THEN
		UPDATE SET
			A.ORIGIN_NAME = #{originName},
			A.CHANGE_NAME = #{changeName},
			A.FILE_PATH = #{filePath},
			A.UPLOAD_DATE = SYSDATE
		WHEN NOT MATCHED THEN
		INSERT (FILE_NO, EMP_NO, REF_NO, CATEGORY, ORIGIN_NAME, 
				CHANGE_NAME, FILE_PATH, UPLOAD_DATE, STATUS)
		VALUES(SEQ_ANO.NEXTVAL, #{empNo}, #{refNo}, 2, #{originName}, 
			#{changeName}, #{filePath}, DEFAULT, DEFAULT)
	</update>
</mapper>
