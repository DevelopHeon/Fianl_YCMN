<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">
	<resultMap type="Mail" id="MailMap">
		<result column="MAIL_NO" property="mailNo"/>
		<result column="EMP_NO" property="empNo"/>
		<result column="MAIL_TITLE" property="mailTitle"/>
		<result column="MAIL_TO" property="mailTo"/>
		<result column="MAIL_REF" property="mailRef"/>
		<result column="MAIL_SEC" property="mailSec"/>
		<result column="FILE_NAME" property="fileName"/>
		<result column="MAIL_CONTENT" property="mailContent"/>
		<result column="STATUS" property="status"/>
		<result column="CATEGORY" property="category"/>
		<collection property="Employee" resultMap="EmployeeMap"/>
	</resultMap>
	<resultMap type="Employee" id="EmployeeMap">
		<id column="EMP_NO" property="empNo"/>
		<result column="EMP_NAME" property="empName"/>
		<result column="EMP_PFE" property="empPfe"/>
	</resultMap>
	<resultMap type="ReceiveMail" id="ReceiveMailMap">
		<id column="RECEIVE_NO" property="receiveNo"/>
		<result column="MAIL_NO" property="mailNo"/>
		<result column="EMP_NO" property="empNo"/>
		<result column="RECEIVER" property="receiver"/>
		<result column="STATUS" property="status"/>
		<result column="STAR_MAIL" property="starMail"/>
		<result column="TIMESTAMP" property="timestamp"/>
		<result column="CONFIRM_MAIL" property="confirmMail"/>
		<result column="RECEIVE_STATUS" property="receiveStatus"/>
		<collection property="Mail" resultMap="MailMap"/>
		<collection property="Employee" resultMap="EmployeeMap"/>
	</resultMap>

	<insert id="insertAttachment" parameterType="Attachment">
		INSERT INTO ATTACHMENT
		VALUES(SEQ_ANO.NEXTVAL, #{empNo}, NULL, 7, #{originName}, #{changeName}, #{filePath}, DEFAULT, DEFAULT)
	</insert>
	
	<insert id="insertMail" parameterType="Mail">
		INSERT ALL
		INTO MAIL VALUES(SEQ_MAIL.NEXTVAL, #{empNo}, #{mailTitle}, #{mailTo}, #{mailRef}, #{mailSec}, #{fileName}, TO_CHAR(SYSDATE, 'MM/DD HH24:MI'), #{mailContent}, DEFAULT, DEFAULT)
		INTO SENDMAIL VALUES(SEQ_MAIL.CURRVAL, #{empNo}, TO_CHAR(SYSDATE, 'MM/DD HH24:MI'), DEFAULT)
		SELECT * FROM DUAL
	</insert>
	<!-- 보낸메일List 페이지 수 -->
	<select id="selectSendListCount" resultType="_int">
		SELECT COUNT(*) FROM RECEIVEMAIL WHERE EMP_NO = #{empNo}
	</select>
	
	<!-- 보낸메일 List -->
	<select id="selectSendList" resultMap="ReceiveMailMap">
		SELECT A.*, B.EMP_NAME, C.MAIL_TITLE, C.FILE_NAME FROM RECEIVEMAIL A 
		LEFT JOIN EMPLOYEE B ON A.RECEIVER = B.EMP_NO
		LEFT JOIN MAIL C ON A.MAIL_NO = C.MAIL_NO
		WHERE A.EMP_NO = #{empNo} AND (A.RECEIVE_STATUS = 'Y' OR A.RECEIVE_STATUS = 'RN') AND RECEIVER != 0
		ORDER BY A.MAIL_NO DESC
	</select>
	
	<!-- 휴지통List -->
	<select id="selectDeleteList" resultMap="ReceiveMailMap">
		SELECT A.*, B.EMP_NAME, C.MAIL_TITLE, C.FILE_NAME FROM RECEIVEMAIL A 
		LEFT JOIN EMPLOYEE B ON A.RECEIVER = B.EMP_NO
		LEFT JOIN MAIL C ON A.MAIL_NO = C.MAIL_NO
		WHERE (A.EMP_NO = #{empNo} OR A.RECEIVER = #{empNo}) AND (A.RECEIVE_STATUS = 'SN' OR A.RECEIVE_STATUS = 'RN')
		ORDER BY A.MAIL_NO DESC
	</select>
	
	<!-- 받은메일List 페이지 수 -->
	<select id="selectReceiveListCount" resultType="_int">
		SELECT COUNT(*) FROM RECEIVEMAIL WHERE RECEIVER = #{empNo}
	</select>
	
	<!-- 받은메일 List -->
	<select id="selectReceiveList" resultMap="ReceiveMailMap">
		SELECT A.*, B.EMP_NAME, B.EMP_PFE, C.MAIL_TITLE, C.FILE_NAME FROM RECEIVEMAIL A 
		LEFT JOIN EMPLOYEE B ON A.EMP_NO = B.EMP_NO
		LEFT JOIN MAIL C ON A.MAIL_NO = C.MAIL_NO
		WHERE RECEIVER = #{empNo} AND (A.RECEIVE_STATUS = 'Y' OR A.RECEIVE_STATUS = 'SN')
		ORDER BY A.MAIL_NO DESC
	</select>
	
	<!-- 받은메일 조회수 카운팅 -->
	<update id="increaseCount" parameterType="ReceiveMail">
		UPDATE RECEIVEMAIL
		SET CONFIRM_MAIL = CONFIRM_MAIL+1
		WHERE RECEIVE_NO = #{receiveNo}
	</update>
	
	<!-- 받은메일 조회 -->
	<select id="selectReceiveMail" resultMap="ReceiveMailMap">
		SELECT
		    A.MAIL_NO,
		    A.EMP_NO,
		    A.MAIL_TITLE,
		    (SELECT B.EMP_NAME FROM EMPLOYEE B WHERE A.MAIL_TO = B.EMP_NO) MAIL_TO,
		    (SELECT B.EMP_NAME FROM EMPLOYEE B WHERE A.MAIL_REF = B.EMP_NO) MAIL_REF,
		    A.FILE_NAME,
		    A.TIMESTAMP,
		    A.MAIL_CONTENT,
		    A.STATUS,
		    A.CATEGORY,
		    B.EMP_NAME,
		    B.EMP_PFE,
		    C.RECEIVE_NO,
		    C.CONFIRM_MAIL FROM MAIL A
		LEFT JOIN EMPLOYEE B ON A.EMP_NO = B.EMP_NO
		JOIN RECEIVEMAIL C ON A.MAIL_NO = C.MAIL_NO
		WHERE C.RECEIVE_NO = #{receiveNo}
	</select>
	
	<!-- 받은메일  삭제 -->
	<update id="updateTrashRMail" parameterType="ReceiveMail">
		UPDATE RECEIVEMAIL
		SET RECEIVE_STATUS = 'RN'
		WHERE RECEIVE_NO IN (#{receiveNo})
	</update>
	
	<!-- 보낸메일 조회 -->
	<select id="selectSendMail" resultMap="ReceiveMailMap">
	SELECT
	    A.MAIL_NO,
	    A.EMP_NO,
	    A.MAIL_TITLE,
	    (SELECT B.EMP_NAME FROM EMPLOYEE B WHERE A.MAIL_TO = B.EMP_NO) MAIL_TO,
	    (SELECT B.EMP_NAME FROM EMPLOYEE B WHERE A.MAIL_REF = B.EMP_NO) MAIL_REF,
	    (SELECT B.EMP_NAME FROM EMPLOYEE B WHERE A.MAIL_SEC = B.EMP_NO) MAIL_SEC,
	    A.FILE_NAME,
	    A.TIMESTAMP,
	    A.MAIL_CONTENT,
	    A.STATUS,
	    A.CATEGORY
    FROM MAIL A
	WHERE A.MAIL_NO = #{mailNo}
	</select>
	
	<!-- 보낸메일 삭제 -->
	<update id="updateTrashSMail" parameterType="ReceiveMail">
		UPDATE RECEIVEMAIL
		SET RECEIVE_STATUS = 'SN'
		WHERE RECEIVE_NO IN (#{receiveNo})
	</update>
	
	<!-- 안읽은 메일 개수 -->
	<select id="selectUnreadMail" resultType="_int">
		SELECT COUNT(*)
		FROM RECEIVEMAIL
		WHERE RECEIVER = #{empNo} AND CONFIRM_MAIL = 0
	</select>
	
	<!-- 전체 메일 개수 -->
	<select id="selectTotalMail" resultType="_int">
		SELECT COUNT(*)
		FROM RECEIVEMAIL
		WHERE RECEIVER = #{empNo} AND RECEIVE_STATUS = 'Y'
	</select>
	
	<!-- 주소록 -> 메일쓰기 -->
	<select id="selectChoiceMail" parameterType="Employee" resultType="Employee">
		SELECT EMP_NO, EMP_NAME
		FROM EMPLOYEE
		WHERE EMP_NO = #{empNo}
	</select>
	
	<!-- 받은메일 즐겨찾기 on -->
	<update id="updateStarMail" parameterType="ReceiveMail">
		UPDATE RECEIVEMAIL
		SET STAR_MAIL = 'Y'
		WHERE RECEIVE_NO = #{receiveNo} AND STAR_MAIL = 'N'
	</update>	
	
	<!-- 받은메일 즐겨찾기 off -->
	<update id="updateOffStarMail" parameterType="ReceiveMail">
		UPDATE RECEIVEMAIL
		SET STAR_MAIL = 'N'
		WHERE RECEIVE_NO = #{receiveNo} AND STAR_MAIL = 'Y'
	</update>
	
	<!-- 휴지통 삭제 -->
	<delete id="realDelete" parameterType="ReceiveMail">
		DELETE FROM RECEIVEMAIL
		WHERE RECEIVE_NO IN (#{receiveNo})
	</delete>
	
	<!-- 메일 보낸사람이 부재인지 확인 -->
	<select id="selectOffEmp" resultMap="MailMap">
		SELECT *
		FROM
			(SELECT B.*
			FROM MAIL A
			LEFT JOIN EMPLOYEE B ON B.EMP_NO = A.MAIL_TO
			WHERE B.EMP_ONOFF = 'F' AND MAIL_TO = #{mailTo}
			ORDER BY MAIL_NO DESC)
		WHERE ROWNUM = 1
	</select>
	
	<!-- 부재메일 발송 -->
	<insert id="insertOffMail" parameterType="Mail">
		INSERT INTO MAIL VALUES(SEQ_MAIL.NEXTVAL, #{mailTo}, '부재중 입니다.', #{empNo}, NULL, NULL, NULL, TO_CHAR(SYSDATE, 'MM/DD HH24:MI'), '현재 부재중 입니다. 긴급한 사항은 연락 부탁드립니다.', DEFAULT, DEFAULT)
	</insert>
	
	<!-- 메인_상단미확인메일리스트 -->
	<select id="selectMainMailList" resultMap="ReceiveMailMap">
	SELECT * FROM
	(SELECT 
	A.*, B.EMP_NAME, B.EMP_PFE, C.MAIL_TITLE, C.FILE_NAME 
	FROM RECEIVEMAIL A 
	LEFT JOIN EMPLOYEE B ON A.EMP_NO = B.EMP_NO
	LEFT JOIN MAIL C ON A.MAIL_NO = C.MAIL_NO
	WHERE RECEIVER = #{empNo} AND (A.RECEIVE_STATUS = 'Y' OR A.RECEIVE_STATUS='SN') AND A.CONFIRM_MAIL = 0
	ORDER BY A.MAIL_NO DESC)
	<![CDATA[WHERE ROWNUM <= 4]]>
	</select>
</mapper>