<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="employeeMapper">

	<select id="loginEmployee" parameterType="Employee" resultType="Employee">
		SELECT A.*,
		       B.DEP_NAME,
		       C.POS_NAME
		FROM EMPLOYEE A
		LEFT OUTER JOIN DEPARTMENT B
		    ON A.DEP_NO = B.DEP_NO
		LEFT OUTER JOIN JOB_POSITION C
		    ON A.POS_NO = C.POS_NO
		WHERE A.EMP_ID = #{empId}
		AND A.STATUS = 'Y'
	</select>
	
	<insert id="insertEmployee" parameterType="Employee">
		INSERT ALL 
		INTO EMPLOYEE(EMP_NO, EMP_NAME, EMP_ID, EMP_PWD, EMP_EMAIL, EMP_PHONE, CATEGORY, STATUS)
   		VALUES(SEQ_EMP.NEXTVAL, #{empName}, #{empId}, #{empPwd}, #{empEmail}, #{empPhone}, DEFAULT, DEFAULT)
   		INTO PERSONNEL_CHART(EMP_NO, HIRE_DATE)
		VALUES(SEQ_EMP.CURRVAL, SYSDATE)
        SELECT * FROM DUAL
	</insert>
	
	<select id="idCheck" parameterType="string" resultType="_int">
		SELECT COUNT(EMP_ID)
		FROM EMPLOYEE
		WHERE EMP_ID = #{empId}
	</select>
	<!-- 회원정보 수정 -->
	<update id="updateEmp" parameterType="Employee">
		UPDATE EMPLOYEE SET EMP_EMAIL = #{empEmail},
								OFFICE_TEL = #{officeTel}, 
								EMP_PHONE = #{empPhone}, 
								EMP_LOC = #{empLoc} 
								WHERE EMP_ID = #{empId}
	</update>
	
	
	<!-- 출근체크 -->
	<insert id="insertStart" parameterType="WorkingDay">
		INSERT INTO WORKINGDAY
		(WORK_NO, EMP_NO, TODAY, START_TIME, STATUS)
		VALUES(SEQ_WORK.NEXTVAL, #{empNo}, SYSDATE, #{startTime}, 'Y')
	</insert>
	
	<!-- 오늘은 이 달의 몇주차? -->
	<update id="updateThisWeek" parameterType="WorkingDay">
		UPDATE WORKINGDAY
		SET THIS_WEEK = CEIL((TO_DATE(TODAY,'YY/MM/DD') - TRUNC(TRUNC(TO_DATE(TODAY,'YY/MM/DD'), 'MM'), 'IW') + 1) / 7)
		WHERE TODAY = TO_CHAR(SYSDATE, 'YY/MM/DD')
	</update>
	
	<!-- 퇴근체크 -->
	<update id="updateFinish" parameterType="WorkingDay">
		UPDATE WORKINGDAY SET FINISH_TIME = #{finishTime} WHERE TO_CHAR(TO_DATE(TODAY, 'YY/MM/DD'), 'YYYY"년 "MM"월 "DD"일 ("DY")"') = #{today} AND EMP_NO = #{empNo}
	</update>
	
	<!-- 근태시간  -->
	<update id="updateWorkHour" parameterType="WorkingDay">
		UPDATE WORKINGDAY SET WORK_HOUR = SUBSTR(TO_TIMESTAMP(#{finishTime},'HH24:MI:SS') - TO_TIMESTAMP(START_TIME,'HH24:MI:SS'), 12, 8)
		WHERE TO_CHAR(TO_DATE(TODAY, 'YY/MM/DD'), 'YYYY"년 "MM"월 "DD"일 ("DY")"') = #{today} AND EMP_NO = #{empNo}
	</update>
	
	<!-- 근태정보 -->
	<select id="selectWorkingInfo" parameterType="WorkingDay" resultType="WorkingDay">
		SELECT * FROM WORKINGDAY
		WHERE EMP_NO = #{empNo}
		ORDER BY TODAY
	</select>
	
	<!-- 출근 여부 -->
	<select id="selectStartCheck" parameterType="WorkingDay" resultType="_int">
		SELECT COUNT(*) FROM WORKINGDAY
		WHERE TODAY = TO_CHAR(SYSDATE, 'YY/MM/DD') 
		AND START_TIME IS NOT NULL AND EMP_NO = #{empNo}
	</select>
	
	<!-- 퇴근 여부 -->
	<select id="selectFinishCheck" parameterType="WorkingDay" resultType="_int">
		SELECT COUNT(*) FROM WORKINGDAY
		WHERE TODAY = TO_CHAR(SYSDATE, 'YY/MM/DD')
		AND FINISH_TIME IS NOT NULL AND EMP_NO = #{empNo}
	</select>
	
	<!-- 주소록 -->
	<select id="selectEmpAddress" parameterType="Employee" resultType="Employee" >
		SELECT A.EMP_NO, A.EMP_NAME, A.EMP_ID, NVL(B.POS_NAME,'연수생') POS_NAME, NVL(C.DEP_NAME,'연수중') DEP_NAME
		FROM EMPLOYEE A
		LEFT JOIN JOB_POSITION B ON A.POS_NO = B.POS_NO
		LEFT JOIN DEPARTMENT C ON A.DEP_NO = C.DEP_NO
		<![CDATA[WHERE A.STATUS = 'Y' AND A.EMP_ID != 'admin']]>
		ORDER BY B.POS_NO
	</select>
	
	<!-- 주소록_사원정보 -->
	<select id="selectDetailEmp" parameterType="Employee" resultType="Employee" >
		SELECT A.EMP_NO, A.EMP_NAME, A.EMP_ID, A.EMP_PHONE, A.EMP_LOC, A.EMP_PFE, A.EMP_ONOFF, 
			   NVL(B.POS_NAME,'연수생') POS_NAME,
			   NVL(C.DEP_NAME,'연수중') DEP_NAME,
			   D.START_TIME, D.END_TIME, D.REZ_TITLE
		FROM EMPLOYEE A
		LEFT JOIN JOB_POSITION B ON A.POS_NO = B.POS_NO
		LEFT JOIN DEPARTMENT C ON A.DEP_NO = C.DEP_NO
		LEFT JOIN RESERVATION D ON A.EMP_NO = D.REZ_WRITER
		WHERE A.STATUS = 'Y' AND A.EMP_NO = #{empNo}
	</select>
	
	<!-- 주소록_사원검색 -->
	<select id="selectSearchEmp" parameterType="Employee" resultType="Employee" >
		SELECT A.EMP_NO, A.EMP_NAME, A.EMP_ID, NVL(B.POS_NAME,'연수생') POS_NAME, NVL(C.DEP_NAME,'연수중') DEP_NAME
		FROM EMPLOYEE A
		LEFT JOIN JOB_POSITION B ON A.POS_NO = B.POS_NO
		LEFT JOIN DEPARTMENT C ON A.DEP_NO = C.DEP_NO
		<![CDATA[WHERE A.STATUS = 'Y' AND A.EMP_NAME LIKE '%'||#{empName}||'%']]>
	</select>
	
	<!-- 프로필 변경 -->
	<insert id="updateImg" parameterType="Attachment">
		INSERT INTO ATTACHMENT
		VALUES(SEQ_ANO.NEXTVAL, #{empNo}, NULL, 1, #{originName}, #{changeName}, #{filePath}, DEFAULT, DEFAULT)
	</insert>
	
	<!-- 프로필 삭제 -->
	<delete id="deleteImg" parameterType="Attachment">
		DELETE FROM ATTACHMENT WHERE CATEGORY = 1 AND EMP_NO = #{empNo}
	</delete>
	
	<!-- 내 연차 조회 -->
	<select id="selectTimeOff" parameterType="TimeOff" resultType="TimeOff">
		SELECT * FROM TIMEOFF WHERE EMP_NO = #{empNo}
	</select>
</mapper>
