도커 - 컨테이너 기반의 오픈소스 가상화 플랫폼, 이미지를 컨테이너의 띄우고 실행하는 기술 
쿠버네티스 - 도커를 기반으로 컨테이너를 관리해주는 서비스 

즉 도커는 한개의 컨테이너 관리 
쿠버네티스는 여러개의 컨테이너를 서비스단위로 관리 


클라우드 컴퓨팅 모델: IAAS, PAAS, SAAS

IaaS(Infrastructure-as-a-Service) - 서버 , 스토리지 , 네트워크 등 인프라 자원을 사용량 기반으로 제공하는 서비스 , AWS

PaaS(Platform-as-a-Service) - 플랫폼 제공, 완전한 개발환경지원 , 운영체제에 미리 플랫폼 설치되어있음 , 

SaaS(Software-as-a-Service)- 소프트웨어 /어플리 케이션 제공 , On-demend 서비스(서비스요청시 바로 서비스를 이용할수있는환경) 제공 , google drive, google docs 등 




운영관점 

물리서버단독실행 ------------------------------> VM + 하이퍼바이저 --------------------------------------------------------------------->컨테이너
개발자에게 익숙      			물리적 자원을 논리적자원으로 추상화 (메모리많이소요 )				응용프로그램이OS를 공유하면서개별적이고 
비효율				           응용프로그램에서 기능호출시 가상서버에서  실 디스크에 작업을 한번더함.		독립적인환경에서 돌아가게 하자
OS 1개당 물리적 서버 1대가 필요 		 IO 관련 하여 속도저하, 
					호스트 OS 위에 게스트 OS 를 가상화. 게스트 OS 가 호스트OS 의 자원을 받아 
					하이퍼바이저를 이용해 가상화. 
					하이퍼바이저 : 호스트 시스템에서 다수의 게스트 OS 를 구동할수있게 해주는 소프트웨어


개발관점

Monolitic - 개발단순, 소규모 프로젝트 ,서비스 부분적 스케일out (서버대수늘리기) 이 힘듬 , 빌드 , 배포시간이 늘어남                     
MSA - 하나의 큰 어플리케이션을 여러개로 쪼개어 조합이 가능하도록 만든 구조
대규모 프로젝트, 독립적배포가능, 부분장애로 전체 서비스가 문제 되지않음, 
독립적 개발, 독립적 배포를 원함. 


따라서 컨테이너에 개발한 프로그램, 실행에 필요한 라이브러리등  모두 넣어서 실행되게끔하자. 

도커 확장성 등 이론 정리하기